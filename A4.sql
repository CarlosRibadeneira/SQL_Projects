--Assigment 4

--Carlos Ribadeneira 


--Q56 
SELECT		BOOK_TITLE, BOOK_COST, BOOK_YEAR
FROM		BOOK
ORDER BY	BOOK_TITLE;

--Q57
SELECT		PAT_FNAME, PAT_LNAME
FROM		PATRON
ORDER BY	PAT_LNAME, PAT_FNAME;

--Q58
SELECT		CHECK_NUM, CONVERT(VARCHAR(10),CHECK_OUT_DATE,101) AS CHECK_OUT_DATE, CONVERT(VARCHAR(10), CHECK_DUE_DATE, 101) AS CHECK_DUE_DATE 
FROM		CHECKOUT
ORDER BY	CHECK_NUM;

--Q59
SELECT		BOOK_NUM, BOOK_TITLE AS TITLE, BOOK_SUBJECT AS "SUBJECT OF BOOK"
FROM		BOOK
ORDER BY	BOOK_NUM;

--Q60
SELECT		DISTINCT BOOK_YEAR
FROM		BOOK
ORDER BY	BOOK_YEAR;

--Q61
SELECT		DISTINCT BOOK_SUBJECT
FROM		BOOK
ORDER BY	BOOK_SUBJECT 

--Q62
SELECT		BOOK_NUM, BOOK_TITLE, BOOK_COST AS "Replacement Cost"
FROM		BOOK 
ORDER BY	BOOK_NUM;

--Q63
SELECT		CHECKOUT.CHECK_NUM, BOOK.BOOK_NUM, PATRON.PAT_ID, CONVERT(VARCHAR(10),CHECK_OUT_DATE,101) AS CHECK_OUT_DATE,  CONVERT(VARCHAR(10),CHECK_DUE_DATE,101) CHECK_DUE_DATE
FROM		BOOK JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM JOIN PATRON ON PATRON.PAT_ID = CHECKOUT.PAT_ID 
ORDER BY	CHECK_OUT_DATE DESC, CHECK_NUM;

--Q64
SELECT		BOOK_TITLE, BOOK_YEAR, BOOK_SUBJECT
FROM		BOOK
ORDER BY	BOOK_SUBJECT, BOOK_YEAR DESC, BOOK_TITLE;

--Q65
SELECT		BOOK_NUM, BOOK_TITLE, BOOK_COST
FROM		BOOK
WHERE		BOOK_COST = 59.95
ORDER BY	BOOK_NUM;

--Q66
SELECT		BOOK_NUM, BOOK_TITLE, BOOK_COST
FROM		BOOK
WHERE		BOOK_SUBJECT = 'DATABASE'
ORDER BY	BOOK_NUM;

--Q67
SELECT		CHECK_NUM, B.BOOK_NUM, CONVERT(VARCHAR(10),CHECK_OUT_DATE,101) AS CHECK_OUT_DATE
FROM		BOOK B JOIN CHECKOUT C ON B.BOOK_NUM = C.BOOK_NUM
WHERE		CHECK_OUT_DATE < '04/5/2015'
ORDER BY	CHECK_NUM;

--Q68
SELECT		BOOK_NUM, BOOK_TITLE, BOOK_YEAR
FROM		BOOK
WHERE		BOOK_SUBJECT = 'PROGRAMMING' AND BOOK_YEAR > '2013'
ORDER BY	BOOK_NUM;

--Q69
SELECT		BOOK_NUM, BOOK_TITLE, BOOK_SUBJECT, BOOK_COST
FROM		BOOK 
WHERE		(BOOK_SUBJECT ='MIDDLEWARE' OR BOOK_SUBJECT = 'CLOUD') AND BOOK_COST>70
ORDER BY	BOOK_NUM;

--Q70
SELECT		AU_ID, AU_FNAME, AU_LNAME, AU_BIRTHYEAR
FROM		AUTHOR 
WHERE		AU_BIRTHYEAR >= 1980 AND AU_BIRTHYEAR <1990
ORDER BY	AU_ID;

--Q71
SELECT		BOOK_NUM, BOOK_TITLE, BOOK_SUBJECT
FROM		BOOK
WHERE		BOOK_TITLE LIKE '%DATA%'
ORDER BY	BOOK_NUM;

--Q72
SELECT		PAT_ID, PAT_FNAME, PAT_LNAME
FROM		PATRON 
WHERE		PAT_TYPE = 'STUDENT'
ORDER BY	PAT_ID;

--Q73
SELECT		PAT_ID, PAT_FNAME, PAT_LNAME, PAT_TYPE
FROM		PATRON 
WHERE		PAT_LNAME LIKE 'C%'
ORDER BY	PAT_ID

--Q74
SELECT		AU_ID, AU_FNAME, AU_LNAME
FROM		AUTHOR
WHERE		AU_BIRTHYEAR IS NULL
ORDER BY	AU_ID;

--Q75
SELECT		AU_ID, AU_FNAME, AU_LNAME
FROM		AUTHOR 
WHERE		AU_BIRTHYEAR IS NOT NULL
ORDER BY	AU_ID;

--Q76
SELECT		CHECK_NUM, BOOK.BOOK_NUM, PATRON.PAT_ID, CONVERT(VARCHAR(10),CHECK_OUT_DATE,101) AS CHECK_OUT_DATE, CONVERT(VARCHAR(10),CHECK_DUE_DATE,101) AS CHECK_DUE_DATE
FROM		BOOK JOIN CHECKOUT ON BOOK.BOOK_NUM=CHECKOUT.BOOK_NUM JOIN PATRON ON PATRON.PAT_ID = CHECKOUT.PAT_ID
WHERE		CHECK_IN_DATE IS NULL
ORDER BY	BOOK_NUM;

--Q77
SELECT		AU_ID, AU_FNAME, AU_LNAME, AU_BIRTHYEAR
FROM		AUTHOR
ORDER BY	AU_BIRTHYEAR DESC, AU_LNAME;

--Q78
SELECT		COUNT(BOOK_NUM) AS 'Number of books'
FROM		BOOK;

--Q79
SELECT		COUNT(DISTINCT BOOK_SUBJECT) AS 'Number of Subjects'
FROM		BOOK;

--Q80
SELECT		COUNT(BOOK.BOOK_NUM) AS 'AVAILABE BOOKS'
FROM		CHECKOUT RIGHT JOIN BOOK ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
WHERE		CHECKOUT.BOOK_NUM IS NULL

--Q81
SELECT		MAX(BOOK_COST) AS 'Most Expensive' 
FROM		BOOK 

--Q82
SELECT		MIN(BOOK_COST) AS 'Least Expensive'
FROM		BOOK 

--Q83
SELECT		COUNT(DISTINCT PATRON.PAT_ID) AS 'DIFFERENT PATRONS'
FROM		PATRON JOIN CHECKOUT ON PATRON. PAT_ID = CHECKOUT.PAT_ID;

--84
SELECT		BOOK_SUBJECT, COUNT(*) AS 'BOOKS IN SUBJECT'
FROM		BOOK 
GROUP BY	BOOK_SUBJECT 
ORDER BY	COUNT(*) DESC, BOOK_SUBJECT;

--85
SELECT		AUTHOR.AU_ID, COUNT(*) AS 'BOOKS WRITTEN'
FROM		AUTHOR JOIN WRITES ON AUTHOR.AU_ID = WRITES.AU_ID
GROUP BY	AUTHOR.AU_ID
ORDER BY	COUNT(*) DESC, AU_ID;

--86
SELECT		SUM(BOOK_COST) AS 'LIBRARY VALUE'
FROM		BOOK;

--87
 SELECT		PAT_ID AS PATRON, BOOK_NUM AS BOOK, DATEDIFF(DAY, CHECK_OUT_DATE, CHECK_IN_DATE) AS 'DAYS KEPT'
 FROM		CHECKOUT
 ORDER BY	'DAYS KEPT' DESC, PAT_ID, BOOK_NUM


 --88
 SELECT		PAT_ID, CONCAT(PAT_FNAME, ' ', PAT_LNAME), PAT_TYPE
 FROM		PATRON 
 ORDER BY	PAT_ID;

 --89
 SELECT		BOOK_NUM, CONCAT(BOOK_TITLE, ' ', '(', BOOK_YEAR, ')'), BOOK_SUBJECT
 FROM		BOOK
 ORDER BY	BOOK_NUM;

 --90
 SELECT		AU_LNAME, AU_FNAME, WRITES.BOOK_NUM
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM
 ORDER BY	AU_LNAME, AU_FNAME, WRITES. BOOK_NUM;

 --91
 SELECT		AUTHOR.AU_ID, BOOK.BOOK_NUM, BOOK_TITLE, BOOK_SUBJECT
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM
 ORDER BY	BOOK.BOOK_NUM, AUTHOR.AU_ID;

 --92
 SELECT		AU_LNAME, AU_FNAME, BOOK_TITLE, BOOK_COST
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM
 ORDER BY	BOOK.BOOK_NUM, AUTHOR.AU_ID;

 --93
 SELECT		PATRON.PAT_ID, BOOK_NUM, PAT_FNAME, PAT_LNAME, BOOK_TITLE
 FROM		PATRON JOIN BOOK ON PATRON.PAT_ID = BOOK.PAT_ID
 ORDER BY	PAT_LNAME, BOOK_TITLE;

 --94
 SELECT		PAT_ID, CONCAT(PAT_FNAME, ' ', PAT_LNAME), PAT_TYPE
 FROM		PATRON 
 ORDER BY	PAT_TYPE, PAT_LNAME, PAT_FNAME;

 --95
 SELECT		BOOK.BOOK_NUM, COUNT(CHECK_NUM) AS "TIMES CHECKED OUT"
 FROM		BOOK JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
 GROUP BY	BOOK.BOOK_NUM
 ORDER BY	COUNT(CHECK_NUM) DESC, BOOK.BOOK_NUM DESC;

 --96
 SELECT		AUTHOR.AU_ID, AU_FNAME, AU_LNAME, WRITES.BOOK_NUM, BOOK_TITLE
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM
 WHERE		BOOK_SUBJECT = 'CLOUD'
 ORDER BY	BOOK_TITLE, AU_LNAME;

 --97
 SELECT		BOOK.BOOK_NUM, BOOK_TITLE, AU_LNAME, AU_FNAME, PATRON.PAT_ID, PAT_LNAME, PAT_TYPE 
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM JOIN PATRON ON BOOK.PAT_ID = PATRON.PAT_ID
 ORDER BY	BOOK_TITLE

 --98
 SELECT		BOOK.BOOK_NUM, BOOK_TITLE, COUNT(CHECK_NUM) AS "TIMES CHECKED OUT"
 FROM		BOOK LEFT JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
 GROUP BY	BOOK.BOOK_NUM, BOOK_TITLE
 ORDER BY	'TIMES CHECKED OUT' DESC, BOOK_TITLE
 
 SELECT		*
 FROM		BOOK FULL JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
 ORDER BY	BOOK.BOOK_NUM 

--99
 SELECT		BOOK.BOOK_NUM, BOOK_TITLE, COUNT(CHECK_NUM) AS "TIMES CHECKED OUT"
 FROM		BOOK JOIN CHECKOUT ON BOOK.BOOK_NUM = CHECKOUT.BOOK_NUM
 GROUP BY	BOOK.BOOK_NUM, BOOK_TITLE
 HAVING		COUNT(CHECK_NUM)>5
 ORDER BY	COUNT(CHECK_NUM) DESC, BOOK_TITLE;

 SELECT *
 FROM CHECKOUT

 --100
 SELECT		AUTHOR.AU_ID, AU_LNAME, BOOK_TITLE, CHECK_OUT_DATE, PAT_LNAME
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM JOIN PATRON ON BOOK.PAT_ID = PATRON.PAT_ID JOIN CHECKOUT ON PATRON.PAT_ID = CHECKOUT.PAT_ID
 WHERE		PAT_LNAME = 'MILES'AND CHECKOUT.CHECK_NUM IS NOT NULL;

 --101
 SELECT		PATRON.PAT_ID, PAT_FNAME, PAT_LNAME 
 FROM		PATRON LEFT JOIN CHECKOUT ON PATRON. PAT_ID = CHECKOUT.PAT_ID
 WHERE		CHECKOUT.PAT_ID IS NULL
 ORDER BY	PAT_LNAME, PAT_FNAME;

 --102
 SELECT		PATRON.PAT_ID, PAT_LNAME, COUNT(CHECKOUT.PAT_ID) AS 'NUM CHECKOUTS', COUNT(DISTINCT BOOK_NUM) AS 'NUM DIFFERENT BOOKS'
 FROM		PATRON JOIN CHECKOUT ON PATRON.PAT_ID = CHECKOUT.PAT_ID
 GROUP BY	PATRON.PAT_ID, PAT_LNAME
 HAVING		COUNT(CHECKOUT.PAT_ID) >=3
 ORDER BY	'NUM DIFFERENT BOOKS' DESC, 'NUM CHECKOUTS' DESC, PATRON.PAT_ID;


 --103
 SELECT		AVG(DATEDIFF(DAY, CHECK_OUT_DATE, CHECK_IN_DATE)) AS 'AVERAGE DAYS KEPT'
 FROM		CHECKOUT
 
 --104--
 SELECT		PATRON.PAT_ID, CHECK_NUM, AVG(DATEDIFF(DAY, CHECK_OUT_DATE, CHECK_IN_DATE)) AS 'AVERAGE DAYS KEPT'
 FROM		PATRON JOIN CHECKOUT ON PATRON.PAT_ID = CHECKOUT.PAT_ID
 GROUP BY	PATRON.PAT_ID, CHECK_NUM

 ORDER BY	'AVERAGE DAYS KEPT' DESC


 --105
 SELECT		BOOK_NUM, BOOK_TITLE, BOOK_COST
 FROM		BOOK 
 WHERE		BOOK_COST = (SELECT MIN(BOOK_COST) FROM BOOK)
 ORDER BY	BOOK_NUM

 --106
 SELECT		AU_ID, AU_FNAME, AU_LNAME
 FROM		AUTHOR
 WHERE		AU_ID NOT IN (SELECT AU_ID FROM BOOK JOIN WRITES ON BOOK.BOOK_NUM = WRITES.BOOK_NUM WHERE BOOK_SUBJECT = 'PROGRAMMING')
 ORDER BY	AU_LNAME

 --107
SELECT BOOK_NUM, BOOK_TITLE, AV, BOOK_COST - AV
FROM BOOK JOIN (SELECT BOOK_SUBJECT, AVG(BOOK_COST) AV
				FROM	BOOK
				 GROUP BY BOOK_SUBJECT) TABLE1 ON BOOK.BOOK_SUBJECT = TABLE1.BOOK_SUBJECT 

 SELECT AVG(BOOK_COST) FROM BOOK GROUP BY BOOK_SUBJECT 



 --108--
 SELECT		WRITES.BOOK_NUM, BOOK_TITLE, BOOK_SUBJECT, AU_LNAME
 FROM		WRITES JOIN AUTHOR ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM
 WHERE		BOOK_SUBJECT = 'CLOUD'
 ORDER BY	BOOK_TITLE, AU_LNAME;
 
 --109---
 SELECT MIN(TABLE1) AS 'LOWEST AVG COST', MAX(TABLE1)'HIGHEST AVG COST'
 FROM (SELECT AVG(BOOK_COST) AS TABLE1 FROM BOOK GROUP BY BOOK_SUBJECT) AS TABLE2






 











